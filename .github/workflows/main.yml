name: Build BerkeleyDB

# Only triggered by git-tags, but the name of the tag is ignored, as only one BDB version is ever built
on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: Build BerkeleyDB
    runs-on: ubuntu-18.04
    env:
      DOCKER_BUILDKIT: 1

    strategy:
      matrix:
        arch:
          - arm32v7
          - arm64
          - amd64

    steps:
      - uses: actions/checkout@v1.0.0

      - name: Register self-compiled qemu
        if: matrix.arch != 'amd64'
        run: docker run --rm --privileged meedamian/simple-qemu:v4.1.0-${{matrix.arch}} -p yes

      - name: Alter Dockerfile to be arch-specific
        if: matrix.arch != 'amd64'
        run: |
          CPU=${{matrix.arch}}

          if [[ "${CPU}" == "arm64" ]]; then
            CPU="arm64v8"
          fi

          sed -ie "s|^FROM alpine|FROM $CPU/alpine|g" Dockerfile
          grep ^FROM Dockerfile

      - name: Build Berkeleydb stage
        run: docker build .  --tag berkeleydb

      - name: Setup environment
        run: |
          echo ::set-env name=DOCKER_USER::"${GITHUB_ACTOR,,}"
          echo ::set-env name=COMMIT_HASH::"${GITHUB_SHA:0:16}"
          echo ::set-env name=SLUG::"$(echo "${GITHUB_REPOSITORY,,}" | sed 's/docker-//')"

      - name: Login to Docker Hub
        run: echo "${{secrets.DOCKER_TOKEN}}" | docker login -u="${DOCKER_USER}" --password-stdin

      - name: Tag image to be commit-specific
        run: docker tag berkeleydb "${SLUG}:${{matrix.arch}}-${COMMIT_HASH}"

      - name: Push image to Docker
        run: docker push "${SLUG}:${{matrix.arch}}-${COMMIT_HASH}"


  manifest:
    name: Aggregate all images under one manifest
    runs-on: ubuntu-18.04
    needs: build
    env:
      VERSION: db-4.8.30.NC

    steps:
      - uses: actions/checkout@v1.0.0

      - name: Enable manifests
        run: |
          mkdir -p ~/.docker

          echo '{ "experimental": "enabled" }' > ~/.docker/config.json
          sudo systemctl restart docker
          docker version

      - name: Setup environment
        run: |
          echo ::set-env name=DOCKER_USER::"${GITHUB_ACTOR,,}"
          echo ::set-env name=COMMIT_HASH::"${GITHUB_SHA:0:16}"
          echo ::set-env name=SLUG::"$(echo "${GITHUB_REPOSITORY,,}" | sed 's/docker-//')"

      - name: Login to Docker Hub
        run: |
          echo "Logging in as ${DOCKER_USER}â€¦"
          echo "${{secrets.DOCKER_TOKEN}}" | docker login -u="${DOCKER_USER}" --password-stdin

      - name: Pull and create manifest
        run: |
          ARCHS=(arm32v7 arm64 amd64)

          for arch in ${ARCHS[@]}; do
            docker pull "${SLUG}:${arch}-${COMMIT_HASH}"

            docker tag  "${SLUG}:${arch}-${COMMIT_HASH}"  "${SLUG}:${VERSION}-${arch}"
            docker push "${SLUG}:${VERSION}-${arch}"
          done

          docker -D manifest create  "${SLUG}:${VERSION}"  "${ARCHS[@]/#/${SLUG}:${VERSION}-}"

          docker manifest annotate "${SLUG}:${VERSION}" "${SLUG}:${VERSION}-arm32v7" --os linux --arch arm   --variant v7
          docker manifest annotate "${SLUG}:${VERSION}" "${SLUG}:${VERSION}-arm64"   --os linux --arch arm64 --variant v8

          docker manifest push "${SLUG}:${VERSION}"

        # TODO: replace with sth more generic like: ${GITHUB_REPOSITORY/docker-} once a solution appears here:
        # https://github.community/t5/GitHub-Actions/Pass-result-of-expression-to-custom-Github-Action-argument/m-p/30458
      - name: Sync README.md with Docker Hub
        uses: meeDamian/sync-readme@v1.0.5
        with:
          pass: ${{secrets.DOCKER_TOKEN}}
          slug: ${SLUG}
          description: true
