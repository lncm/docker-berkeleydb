name: Build BerkeleyDB

on: [push]

#on:
#  push:
#    tags:
#      - '*'

jobs:
  build:
    name: Build BerkeleyDB
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch:
          - arm
          - aarch64
          - amd64

    steps:
      - uses: actions/checkout@v1.0.0

      - name: Register self-compiled qemu
        if: matrix.arch != 'amd64'
        run: docker run --rm --privileged meedamian/simple-qemu:v4.1.0-${{matrix.arch}} -p yes

      - name: Alter Dockerfile to be arch-specific
        if: matrix.arch != 'amd64'
        run: |
          if [[ "${{ matrix.arch }}" == "aarch64" ]]; then
            sed -ie 's/FROM alpine/FROM arm64v8\/alpine/g' Dockerfile
            exit 0
          fi

          if [[ "${{ matrix.arch }}" == "arm" ]]; then
            sed -ie "s/FROM alpine/FROM arm32v7\/alpine/g" Dockerfile
            exit 0
          fi

          exit 1

      - name: Build Berkeleydb stage
        run: >
          DOCKER_BUILDKIT=1 docker build .
          --tag   berkeleydb
          --file  Dockerfile

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASS }}" | docker login -u="${GITHUB_ACTOR,,}" --password-stdin

      - name: Tag and push
        run: |
          SLUG=$(echo ${GITHUB_REPOSITORY,,} | sed 's/docker-//')

          docker tag berkeleydb "${SLUG}:${{ matrix.arch }}-${GITHUB_SHA:0:16}"
          docker push "${SLUG}:${{ matrix.arch }}-${GITHUB_SHA:0:16}"


  # TODO: only do that on tag
  manifest:
    name: Aggregate all images under one manifest
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v1.0.0

      - name: Enable manifests
        run: |
          mkdir -p ~/.docker

          echo '{ "experimental": "enabled" }' > ~/.docker/config.json
          sudo systemctl restart docker
          docker version

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASS }}" | docker login -u="${GITHUB_ACTOR,,}" --password-stdin

      - name: Pull and create manifest
        run: |
          SLUG=$(echo ${GITHUB_REPOSITORY,,} | sed 's/docker-//')

          ARCHS=(arm aarch64 amd64)

          for arch in ${ARCHS[@]}; do
            docker pull "${SLUG}:${arch}-${GITHUB_SHA:0:16}"

            docker tag  "${SLUG}:${arch}-${GITHUB_SHA:0:16}"  "${SLUG}:db-4.8.30.NC-${arch}"
            docker push "${SLUG}:db-4.8.30.NC-${arch}"
          done

          docker -D manifest create  "${SLUG}:db-4.8.30.NC"  "${ARCHS[@]/#/${SLUG}:db-4.8.30.NC-}"

          docker manifest annotate "${SLUG}:db-4.8.30.NC" "${SLUG}:db-4.8.30.NC-arm"     --os linux --arch arm   --variant v7
          docker manifest annotate "${SLUG}:db-4.8.30.NC" "${SLUG}:db-4.8.30.NC-aarch64" --os linux --arch arm64 --variant v8

          docker manifest push "${SLUG}:db-4.8.30.NC"
